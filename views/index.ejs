<!DOCTYPE html>
<html lang="nl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NL Zoekt - Nederlandse Nieuwszoeker</title>
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="container">
        <header>
            <h1><a href="/" style="text-decoration: none; color: inherit;">üîç NL Zoekt</a></h1>
            <p>Zoek door Nederlandse nieuwsartikelen</p>
        </header>

        <form class="search-form" method="GET">
            <div class="search-input">
                <input type="text" name="q" value="<%= query %>" placeholder="Zoek naar nieuws..." autofocus>
                <button type="submit">Zoeken</button>
            </div>

            <div class="filters">
                <div class="filter-group">
                    <label for="medium">Medium:</label>
                    <select name="medium" id="medium">
                        <option value="">Alle media</option>
                        <% stats.media.forEach(m => { %>
                        <option value="<%= m %>" <%= filters.medium === m ? 'selected' : '' %>><%= m %></option>
                        <% }); %>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="region">Regio:</label>
                    <select name="region" id="region">
                        <option value="">Alle regio's</option>
                        <% stats.regions.forEach(r => { %>
                        <option value="<%= r %>" <%= filters.region === r ? 'selected' : '' %>><%= r %></option>
                        <% }); %>
                    </select>
                </div>

                <div class="filter-group">
                    <label for="date_from">Van:</label>
                    <input type="date" name="date_from" id="date_from" value="<%= filters.dateFrom %>">
                </div>

                <div class="filter-group">
                    <label for="date_to">Tot:</label>
                    <input type="date" name="date_to" id="date_to" value="<%= filters.dateTo %>">
                </div>
            </div>
        </form>

        <div class="stats">
            <p><%= results %> resultaten gevonden van <%= stats.totalArticles %> artikelen totaal</p>
        </div>

        <div class="results">
            <% if (articles.length === 0 && query) { %>
                <div class="no-results">
                    <p>Geen artikelen gevonden voor "<%= query %>"</p>
                </div>
            <% } else if (articles.length === 0) { %>
                <div class="no-results">
                    <p>Nog geen artikelen geladen. <a href="/import">Importeer feeds</a> om te beginnen.</p>
                </div>
            <% } else { %>
                <% if (trendingArticles && trendingArticles.length > 0) { %>
                    <% trendingArticles.forEach(trendingItem => { %>
                    <article class="article trending-article">
                        <div class="trending-keyword-label">
                            <span class="trending-label">Trending:</span>
                            <a href="?q=<%= encodeURIComponent(trendingItem.keyword) %>" class="trending-keyword"><%= trendingItem.keyword %></a>
                        </div>
                        <div class="article-meta">
                            <span class="medium"><%= trendingItem.article.medium %></span>
                            <span class="region"><%= trendingItem.article.region %></span>
							<span class="article-links"><a href="#" onclick="openArchive('<%= trendingItem.article.link %>', this); return false;" class="archive-link" data-url="<%= trendingItem.article.link %>">üìÅ Archief</a></span>
                            <span class="date"><%= new Date(trendingItem.article.pubDate).toLocaleDateString('nl-NL', {day: 'numeric', month: 'long', year: 'numeric'}) %> - <%= new Date(trendingItem.article.pubDate).toLocaleTimeString('nl-NL', {hour: '2-digit', minute: '2-digit'}) %></span>
                        </div>
                        <h2><a href="<%= trendingItem.article.link %>" target="_blank"><%= trendingItem.article.title %></a></h2>
                        <% if (trendingItem.article.content) { %>
                        <p class="content"><%= trendingItem.article.content.substring(0, 200) %>...</p>
                        <% } %>
                    </article>
                    <% }); %>
                <% } else { %>
                    <% articles.forEach(article => { %>
                    <article class="article">
                        <div class="article-meta">
                            <span class="medium"><%= article.medium %></span>
                            <span class="region"><%= article.region %></span>
							<span class="article-links"><a href="#" onclick="openArchive('<%= article.link %>', this); return false;" class="archive-link" data-url="<%= article.link %>">üìÅ Archief</a></span>
                            <span class="date"><%= new Date(article.pubDate).toLocaleDateString('nl-NL', {day: 'numeric', month: 'long', year: 'numeric'}) %> - <%= new Date(article.pubDate).toLocaleTimeString('nl-NL', {hour: '2-digit', minute: '2-digit'}) %></span>
                        </div>
                        <h2><a href="<%= article.link %>" target="_blank"><%= article.title %></a></h2>
                        <% if (article.content) { %>
                        <p class="content"><%= article.content.substring(0, 200) %>...</p>
                        <% } %>
                    </article>
                    <% }); %>
                <% } %>
            <% } %>
        </div>

        <footer>
            <p>
                <a href="/import">Handmatig importeren</a> | 
                <a href="/stats">Statistieken</a>
            </p>
        </footer>
    </div>

    <script>
    const archiveCache = new Map();

    async function checkArchiveStatus(url) {
        try {
            const response = await fetch(`/archive/check/${encodeURIComponent(url)}`);
            const result = await response.json();
            return result;
        } catch (error) {
            console.error('Archive check error:', error);
            return { archived: false };
        }
    }

    async function archiveUrl(url) {
        try {
            const response = await fetch('/archive', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ url: url })
            });
            return await response.json();
        } catch (error) {
            console.error('Archive error:', error);
            return { success: false, error: error.message };
        }
    }

    async function openArchive(url, linkElement) {
        const originalText = linkElement.textContent;
        linkElement.textContent = '‚è≥ Zoeken...';
        linkElement.style.pointerEvents = 'none';
        
        try {
            let archiveData = archiveCache.get(url);
            
            if (!archiveData) {
                archiveData = await checkArchiveStatus(url);
                archiveCache.set(url, archiveData);
            }
            
            if (archiveData.archived) {
                window.open(archiveData.archiveUrl, '_blank');
                linkElement.textContent = 'üìÅ Archief';
            } else {
                // Try to search on Wayback Machine
                window.open(`https://web.archive.org/web/*/${url}`, '_blank');
                linkElement.textContent = 'üìÅ Archief (zoeken)';
            }
        } catch (error) {
            console.error('Open archive error:', error);
            linkElement.textContent = '‚ùå Fout';
            setTimeout(() => {
                linkElement.textContent = originalText;
            }, 3000);
        }
        
        linkElement.style.pointerEvents = 'auto';
    }

    // Auto-archive trending articles on page load and update button status
    document.addEventListener('DOMContentLoaded', async function() {
        const trendingArticles = document.querySelectorAll('.trending-article');
        
        for (const article of trendingArticles) {
            const articleLink = article.querySelector('h2 a');
            const archiveButton = article.querySelector('.archive-link');
            
            if (articleLink && archiveButton) {
                const url = articleLink.href;
                
                try {
                    // Check if already archived
                    const archiveStatus = await checkArchiveStatus(url);
                    archiveCache.set(url, archiveStatus);
                    
                    if (archiveStatus.archived) {
                        archiveButton.textContent = 'üìÅ Archief ‚úì';
                        archiveButton.style.color = '#28a745';
                    } else {
                        // Try to archive it in the background
                        archiveButton.textContent = 'üìÅ Archiveren...';
                        archiveButton.style.color = '#ffc107';
                        
                        const archiveResult = await archiveUrl(url);
                        if (archiveResult.success) {
                            archiveButton.textContent = 'üìÅ Archief ‚úì';
                            archiveButton.style.color = '#28a745';
                            // Update cache with new archive URL
                            archiveCache.set(url, { archived: true, archiveUrl: archiveResult.archiveUrl });
                        } else {
                            archiveButton.textContent = 'üìÅ Archief';
                            archiveButton.style.color = '';
                        }
                    }
                } catch (error) {
                    console.log('Background archive failed for:', url, error);
                    archiveButton.textContent = 'üìÅ Archief';
                }
            }
        }
    });
    </script>
</body>
</html>